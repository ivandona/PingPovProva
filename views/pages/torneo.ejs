<!doctype html>
<html>

<head>
  <title>Lista Tornei</title>
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.4.1/css/bootstrap.min.css">
  <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css">
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
  <link rel="stylesheet" href="/style/brackets.css">
  <script>
    Torneo=''
    $(document).ready(function() {
      torneo=$('#torneo').html()
      torneo = JSON.parse(torneo)
      Torneo=torneo
      var knownBrackets = [2, 4, 8, 16, 32, 64], // brackets with "perfect" proportions (full fields, no byes)
        exampleTeams = _.shuffle(torneo[0].giocatori)
        console.log(exampleTeams)
        bracketCount = 0; 

      /*
      * Build our bracket "model"
      */
      function getBracket(base) {

        var closest = _.find(knownBrackets, function (k) { return k >= base; }),
          byes = closest - base;

        if (byes > 0) base = closest;

        var brackets = [],
          round = 1,
          baseT = base / 2,
          baseC = base / 2,
          teamMark = 0,
          nextInc = base / 2;

        for (i = 1; i <= (base - 1); i++) {
          var baseR = i / baseT,
            isBye = false;

          if (byes > 0 && (i % 2 != 0 || byes >= (baseT - i))) {
            isBye = true;
            byes--;
          }

          var last = _.map(_.filter(brackets, function (b) { return b.nextGame == i; }), function (b) { return { game: b.bracketNo, teams: b.teamnames }; });

          brackets.push({
            lastGames: round == 1 ? null : [last[0].game, last[1].game],
            nextGame: nextInc + i > base - 1 ? null : nextInc + i,
            teamnames: round == 1 ? [exampleTeams[teamMark], exampleTeams[teamMark + 1]]: [last[0].teams[_.random(1)], last[1].teams[_.random(1)]],
            bracketNo: i,
            roundNo: round,
            bye: isBye
          });
          teamMark += 2;
          if (i % 2 != 0) nextInc--;
          while (baseR >= 1) {
            round++;
            baseC /= 2;
            baseT = baseT + baseC;
            baseR = i / baseT;
          }
        }

        renderBrackets(brackets);
      }

      /*
      * Inject our brackets
      */
      function renderBrackets(struct) {
        var groupCount = _.uniq(_.map(struct, function (s) { return s.roundNo; })).length;

        var group = $('<div class="group' + (groupCount + 1) + '" id="b' + bracketCount + '"></div>'),
          grouped = _.groupBy(struct, function (s) { return s.roundNo; });
        
          var round = $('<div class="r' + 1 + '"></div>');
          _.each(grouped[1], function (gg) {
            if (gg.bye)
              round.append('<div></div>');
            else
              //, gg.bracketNo, gg.teamnames[0], gg.teamnames[1]
              round.append('<div><div class="bracketbox"><span class="info1">' +
               gg.bracketNo + '</span><span class="info2">' +
               gg.bracketNo + '</span><span class="teama" id='+
               gg.bracketNo +'-1>' +gg.teamnames[0] +
             '</span><span class="teamb" id='+
             gg.bracketNo +'-2>' +
             gg.teamnames[1] + '</span></div></div>');
          });
          group.append(round);
        
          for (g = 2; g <= groupCount; g++) {
          var round = $('<div class="r' + g + '"></div>');
          _.each(grouped[g], function (gg) {
            if (gg.bye)
              round.append('<div></div>');
            else
              //, gg.bracketNo, gg.teamnames[0], gg.teamnames[1]
              round.append('<div><div class="bracketbox"><span class="info1">' + 
                gg.bracketNo + 
                '</span><span class="info2">' +
                gg.bracketNo +
                '</span><span class="teama">' +
                '<button type="button" class="btn btn-danger" id='+
                gg.bracketNo +'-1 onclick="setResult(this)">Risultato</button>'+ 
                '</span><span class="teamb">'+
                '<button type="button" class="btn btn-danger" id='+
                gg.bracketNo +
                '-2 onclick="setResult(this)">Risultato</button>'+ 
                '</span></div></div>');
          });
          group.append(round);
        }
        group.append('<div class="r' + (groupCount + 1) + '"><div class="final"><div class="bracketbox"><span class="teamc">' +
          '<button type="button" onclick="setWinner(this)"Fcle class="btn btn-danger">Risultato</button>' +
          '</span></div></div></div>');
        $('#brackets').append(group);

        bracketCount++;
        $('html,body').animate({
          scrollTop: $("#b" + (bracketCount - 1)).offset().top
        });
      }

      $('#add').on('click', function () {
       //var opts = parseInt(prompt('Bracket size (number of teams):', 32));
       var opts = torneo[0].numero_partecipanti
        console.log(torneo[0].numero_partecipanti)
        if (!_.isNaN(opts) && opts <= _.last(knownBrackets))
          getBracket(opts);
        else
          alert('The bracket size you specified is not currently supported.');
        $('#clear').off('click');
        $('#clear').on('click', function () {
          $('#brackets').html("");
        });
      });

      console.log(document.getElementsByTagName('body')[0].innerHTML) ;
    })
  </script>
  <script>
    function setResult(cell){
      let first_score =  Number(prompt("Inserisci punteggio primo giocatore",''))
      console.log(typeof(first_score))
      console.log(first_score)
      if (first_score<0 || isNaN(first_score)){
        alert("valore non valido")
        return
      }
      let second_score = Number(prompt("Inserisci punteggio secondo giocatore",''))
      if (second_score<0 || isNaN(second_score)){
        alert("valore non valido")
        return
      }
      
      cell = cell.parentNode
      if(first_score >=second_score){
        cell.innerHTML='('+first_score +'/'+second_score+')->player1'
      }else{
        cell.innerHTML='('+first_score +'/'+second_score+')->player2'
      }
    }
    function setWinner(cell){
      setResult(cell)
      document.getElementById('winner').innerHTML="Il vincitore Ã¨: boh"
    }
  </script>
</head>

<body>
  <%- include('navbar.ejs') %>
  <p hidden id="torneo"><%=torneo%></p>
  <b><p id="winner"></p></b>
  <div id="add" class="btn btn-outline-success my-2 my-sm-0" type="submit">Inizia Torneo</div>
  <!--<div id="clear" class="metroBtn">Clear</div>-->
  <div class="brackets" id="brackets"></div>
  <script src="https://cdn.jsdelivr.net/npm/underscore@1.13.3/underscore-umd-min.js"></script>
</body>

</html>